precision mediump float;
varying vec3 vColor;
varying vec3 vNorm;
varying vec3 vView;
uniform vec3 SOURCE_AMBIENT;
uniform vec3 SOURCE_DIFFUSE;
uniform vec3 SOURCE_SPECULAR;
uniform vec3 SOURCE_DIRECTION;
uniform vec3 MATERIAL_AMBIENT;
uniform vec3 MATERIAL_DIFFUSE;
uniform vec3 MATERIAL_SPECULAR;
uniform float GLOSS;

void main(void) {
	vec3 I_ambient = SOURCE_AMBIENT*MATERIAL_AMBIENT;
	vec3 V = normalize(vView);
	vec3 L = normalize(SOURCE_DIRECTION);
	vec3 I_diffuse = max(0.0,dot(vNorm,L))*(MATERIAL_DIFFUSE*SOURCE_DIFFUSE)*7.0;
	vec3 R = reflect(SOURCE_DIRECTION,vNorm);
	vec3 I_specular = SOURCE_SPECULAR*MATERIAL_SPECULAR*pow(max(dot(R,V),0.),GLOSS);
	vec3 I = I_ambient+I_diffuse+I_specular;
	gl_FragColor = vec4(I*vColor,1.);

}