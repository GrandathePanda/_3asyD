var PI=Math.PI;_3asyD={gl:null,programs:[],dtor:function(t){return t*Math.PI/180},getI4:function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},rotateY:function(t,r){var i=Math.cos(r),e=Math.sin(r),o=t[1],a=t[5],n=t[9];t[1]=t[1]*i-t[2]*e,t[5]=t[5]*i-t[6]*e,t[9]=t[9]*i-t[10]*e,t[2]=t[2]*i+o*e,t[6]=t[6]*i+a*e,t[10]=t[10]*i+n*e},rotateX:function(t,r){var i=Math.cos(r),e=Math.sin(r),o=t[0],a=t[4],n=t[8];t[0]=i*t[0]+e*t[2],t[4]=i*t[4]+e*t[6],t[8]=i*t[8]+e*t[10],t[2]=i*t[2]-e*o,t[6]=i*t[6]-e*a,t[10]=i*t[10]-e*n},rotateZ:function(t,r){var i=Math.cos(r),e=Math.sin(r),o=t[0],a=t[4],n=t[8];t[0]=i*t[0]-e*t[1],t[4]=i*t[4]-e*t[5],t[8]=i*t[8]-e*t[9],t[1]=i*t[1]+e*o,t[5]=i*t[5]+e*a,t[9]=i*t[9]+e*n},crossProduct:function(t,r){try{if(t.length>3||r.length>3)throw"Vector length greater than 3. Fuck that noise.";if(t.length!=r.length)throw"Vector lengths not equal. Seriously?";if(1==t.length)throw"This isn't a cross product, this is called basic multiplication use the * operator for that.";if(2==t.length)return t[0]*r[1]-r[0]*t[1];if(3==t.length)return[t[1]*r[2]-t[2]*r[1],t[2]*r[0]-t[0]*r[2],t[0]*r[1]-t[1]*r[0]]}catch(i){return console.error(i),!1}},vectorByScalar:function(t,r){t.length<2&&console.warn("Built in multiplication should be used.");for(var i=0;i<t.length;++i)t[i]*=r;return console.log(t),t},translateXYZ:function(t,r,i,e){t[12]+=r,t[13]+=i,t[14]+=e},setGL:function(t){try{this.gl=document.getElementById(t).getContext("experimental-webgl"),this.VMATRIX=this.getI4()}catch(r){return console.error(r),!1}return!0},getGL:function(){var t=this.gl;return null!=t?t:!1},hexToGLRGB:function(t){var r="";r=4==t.length?t.charAt(1)+t.charAt(1)+t.charAt(2)+t.charAt(2)+t.charAt(3)+t.charAt(3):t.charAt(1)+t.charAt(2)+t.charAt(3)+t.charAt(4)+t.charAt(5)+t.charAt(6);var i=parseInt(r.charAt(0)+r.charAt(1),16),e=parseInt(r.charAt(2)+r.charAt(3),16),o=parseInt(r.charAt(4)+r.charAt(5),16);return[i/255,e/255,o/255]},drawStage:function(t){{var r=this.gl;this.ATTRIBUTES}try{r.enable(r.DEPTH_TEST),r.depthFunc(r.LEQUAL),r.clearColor(0,0,0,0),r.clearDepth(1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.viewport(t.VIEWPORT[0],t.VIEWPORT[1],t.VIEWPORT[2],t.VIEWPORT[3]);for(var i=0;i<t.MESHES.length;++i){{var e=t.MESHES[i],o=t.MESHES[i].OBJECTS;t.MESHES[i].ATTRIBUTES}r.useProgram(e.SHADER.SHADER_PROGRAM),r.uniformMatrix4fv(e.UNIFORMS.pMatrix,!1,t.CAMERA),r.uniformMatrix4fv(e.UNIFORMS.vMatrix,!1,t.VMATRIX);for(var a=0;a<o.length;++a)r.uniformMatrix4fv(e.UNIFORMS.mMatrix,!1,o[a].MMATRIX),r.bindBuffer(r.ARRAY_BUFFER,o[a].VERTEX_BUFFER),r.vertexAttribPointer(e.ATTRIBUTES.position,3,r.FLOAT,!1,0,0),r.bindBuffer(r.ARRAY_BUFFER,o[a].COLOR_BUFFER),r.vertexAttribPointer(e.ATTRIBUTES.color,3,r.FLOAT,!1,0,0),r.bindBuffer(r.ARRAY_BUFFER,o[a].NORMAL_BUFFER),r.vertexAttribPointer(e.ATTRIBUTES.normal,3,r.FLOAT,!1,0,0),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,o[a].FACE_BUFFER),r.drawElements(o[a].DRAWTYPE,o[a].INDICIES,r.UNSIGNED_SHORT,0)}r.flush()}catch(n){return console.error(n),!1}},Sphere:function(t,r,i,e,o){var a=t,n=r,s=i,h=e,E=o;this.CHILDREN=[],this.VERTICIES=[],this.NORMALS=[],this.COLOR=[],this.MATERIAL="FLAT",this.MMATRIX=_3asyD.getI4(),this.INDICIES=e*o*6,this.DRAWTYPE=_3asyD.gl.TRIANGLES;for(var u=0;PI>=u;u+=PI/E)for(j=0;j<=2*PI;j+=2*PI/h){var c=Math.sin(u)*Math.cos(j),R=Math.sin(u)*Math.sin(j),S=Math.cos(u);this.NORMALS.push(c,R,S),this.VERTICIES.push(a*c,n*R,s*S)}this.FACES=[];for(var u=0;o>u;++u)for(j=0;j<e;++j){var A=u*(e+1)+j,f=A+e+1;this.FACES.push(A,f,A+1),this.FACES.push(f,f+1,A+1)}},Cone:function(){}},_3asyD.Shader=function(t){var r=null;"FLAT"==t&&(r=new this.flat,this.UNIFORMS=r.UNIFORMS,this.ATTRIBUTES=r.ATTRIBUTES),"PHONG"==t&&(r=new this.phong,this.UNIFORMS=r.UNIFORMS,this.ATTRIBUTES=r.ATTRIBUTES);var i=_3asyD.gl,e=i.createShader(i.VERTEX_SHADER),o=i.createShader(i.FRAGMENT_SHADER);return i.shaderSource(e,r.vertex.sourceCode()),i.compileShader(e),i.getShaderParameter(e,i.COMPILE_STATUS)?(i.shaderSource(o,r.fragment.sourceCode()),i.compileShader(o),i.getShaderParameter(o,i.COMPILE_STATUS)?(this.SHADER_PROGRAM=i.createProgram(),i.attachShader(this.SHADER_PROGRAM,e),i.attachShader(this.SHADER_PROGRAM,o),i.linkProgram(this.SHADER_PROGRAM),void(this.type=t+"_SHADER")):(console.error("Fragment Shader Failed to Compile.\n"+i.getShaderInfoLog(o)+"\n"),!1)):(console.error("Vertex Shader Failed to Compile.\n"+i.getShaderInfoLog(e)+"\n"),!1)},_3asyD.Shader.prototype=_3asyD,_3asyD.Shader.prototype.constructor=_3asyD.Shader,_3asyD.Shader.prototype.flat=function(){this.UNIFORMS=["pMatrix","vMatrix","mMatrix","SOURCE_AMBIENT","SOURCE_DIFFUSE","SOURCE_DIRECTION","MATERIAL_AMBIENT","MATERIAL_DIFFUSE"],this.ATTRIBUTES=["color","position","normal"],this.vertex={attributePosition:"attribute vec3 position;\n",attributeColor:"attribute vec3 color;\n",attributeNormal:"attribute vec3 normal;\n",uniformPMatrix:"uniform mat4 pMatrix;\n",uniformVMatrix:"uniform mat4 vMatrix;\n",uniformMMatrix:"uniform mat4 mMatrix;\n",varyingColor:"varying vec3 vColor;\n",varyingNormal:"varying vec3 vNormal;\n",main:"void main(void) { \n			vColor = color; \n			vNormal = vec3(mMatrix*vec4(normal,0)); \n			gl_Position = pMatrix*vMatrix*mMatrix*vec4(position,1.0); \n		}",sourceCode:function(){return this.attributePosition+this.attributeColor+this.attributeNormal+this.uniformPMatrix+this.uniformVMatrix+this.uniformMMatrix+this.varyingColor+this.varyingNormal+this.main}},this.fragment={precision:"precision mediump float;\n",varyingColor:"varying vec3 vColor;\n",varyingNormal:"varying vec3 vNormal;\n",uniformSourceAmbient:"uniform vec3 SOURCE_AMBIENT;\n",uniformSourceDiffuse:"uniform vec3 SOURCE_DIFFUSE;\n",uniformSourceDirection:"uniform vec3 SOURCE_DIRECTION;\n",uniformMaterialAmbient:"uniform vec3 MATERIAL_AMBIENT;\n",uniformMaterialDiffuse:"uniform vec3 MATERIAL_DIFFUSE;\n",main:"void main(void) { \n			vec3 I_ambient = SOURCE_AMBIENT*MATERIAL_AMBIENT; \n			vec3 L = normalize(SOURCE_DIRECTION); \n			vec3 I_diffuse = max(0,dot(vNoraml,L))*(MATERIAL_DIFFUSE*SOURCE_DIFFUSE)*10.0; \n			vec3 I = I_ambient+I_diffuse; \n			gl_FragColor = vec4(I*vColor,1.0); \n		}",sourceCode:function(){var t=this;return t.precision+t.varyingColor+t.varyingNormal+t.uniformSourceAmbient+t.uniformSourceDiffuse+t.uniformSourceDirection+t.uniformMaterialDiffuse+t.uniformMaterialAmbient+t.main}}},_3asyD.Shader.prototype.phong=function(){this.UNIFORMS=["pMatrix","vMatrix","mMatrix","SOURCE_AMBIENT","SOURCE_DIFFUSE","SOURCE_DIRECTION","SOURCE_SPECULAR","MATERIAL_AMBIENT","MATERIAL_DIFFUSE","MATERIAL_SPECULAR","GLOSS"],this.ATTRIBUTES=["color","position","normal"],this.vertex={attributePosition:"attribute vec3 position;\n",attributeColor:"attribute vec3 color;\n",attributeNormal:"attribute vec3 normal;\n",uniformPMatrix:"uniform mat4 pMatrix;\n",uniformVMatrix:"uniform mat4 vMatrix;\n",uniformMMatrix:"uniform mat4 mMatrix;\n",varyingColor:"varying vec3 vColor;\n",varyingNormal:"varying vec3 vNormal;\n",varyingView:"varying vec3 vView;\n",main:"void main(void) { \n			vNormal = vec3(mMatrix*vec4(normal,0)); \n			gl_Position = pMatrix*vMatrix*mMatrix*vec4(position,1.0); \n			vView = vec3(vMatrix*mMatrix*vec4(position,1.0)); \n			vColor = color; \n		}",sourceCode:function(){return this.attributePosition+this.attributeColor+this.attributeNormal+this.uniformPMatrix+this.uniformVMatrix+this.uniformMMatrix+this.varyingColor+this.varyingNormal+this.varyingView+this.main}},this.fragment={precision:"precision mediump float;\n",varyingColor:"varying vec3 vColor;\n",varyingNormal:"varying vec3 vNormal;\n",varyingView:"varying vec3 vView;\n",uniformSourceAmbient:"uniform vec3 SOURCE_AMBIENT;\n",uniformSourceDiffuse:"uniform vec3 SOURCE_DIFFUSE;\n",uniformSourceSpecular:"uniform vec3 SOURCE_SPECULAR;\n",uniformSourceDirection:"uniform vec3 SOURCE_DIRECTION;\n",uniformMaterialAmbient:"uniform vec3 MATERIAL_AMBIENT;\n",uniformMaterialDiffuse:"uniform vec3 MATERIAL_DIFFUSE;\n",uniformMaterialSpecular:"uniform vec3 MATERIAL_SPECULAR;\n",uniformGloss:"uniform float GLOSS;\n",main:"void main(void) { \n			vec3 I_ambient = SOURCE_AMBIENT*MATERIAL_AMBIENT; \n			vec3 V = normalize(vView); \n			vec3 L = normalize(SOURCE_DIRECTION); \n			vec3 I_diffuse = max(0.0,dot(vNormal,L))*(MATERIAL_DIFFUSE*SOURCE_DIFFUSE)*10.0; \n			vec3 R = reflect(SOURCE_DIRECTION,vNormal); \n			vec3 I_specular = SOURCE_SPECULAR*MATERIAL_SPECULAR*pow(max(dot(R,V),0.),GLOSS); \n			vec3 I = I_ambient+I_diffuse+I_specular; \n			gl_FragColor = vec4(I*vColor,1.); \n		}",sourceCode:function(){var t=this;return t.precision+t.varyingColor+t.varyingNormal+t.varyingView+t.uniformSourceAmbient+t.uniformSourceDiffuse+t.uniformSourceSpecular+t.uniformSourceDirection+t.uniformMaterialAmbient+t.uniformMaterialDiffuse+t.uniformMaterialSpecular+t.uniformGloss+t.main}}},_3asyD.Shape=function(){this.CHILDREN=[],this.INDICIES=null,this.VERTICIES=[],this.NORMALS=[],this.FACE_UV=[],this.FACES=[],this.COLOR=[],this.DRAWTYPE=this.gl.TRIANGLES,this.MMATRIX=this.getI4()},_3asyD.Shape.prototype=_3asyD,_3asyD.Shape.prototype.constructor=_3asyD.Shape,_3asyD.Shape.prototype.setDrawType=function(t){try{var r=this.gl;this.DRAWTYPE=r[t]}catch(i){return console.error(i),!1}},_3asyD.Shape.prototype.bufferSetUp=function(){var t=this.gl;this.VERTEX_BUFFER=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.VERTEX_BUFFER),t.bufferData(t.ARRAY_BUFFER,new Float32Array(this.VERTICIES),t.STATIC_DRAW),this.FACE_BUFFER=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.FACE_BUFFER),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array(this.FACES),t.STATIC_DRAW),this.NORMAL_BUFFER=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.NORMAL_BUFFER),t.bufferData(t.ARRAY_BUFFER,new Float32Array(this.NORMALS),t.STATIC_DRAW),this.COLOR_BUFFER=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.COLOR_BUFFER),t.bufferData(t.ARRAY_BUFFER,new Float32Array(this.COLOR),t.STATIC_DRAW)},_3asyD.Stage=function(t,r,i){this.VMATRIX=_3asyD.getI4(),this.MESHES=[],void 0!==typeof i&&(this.MESHES=i),this.NAME=t,this.VIEWPORT=r},_3asyD.Stage.prototype=_3asyD,_3asyD.Stage.prototype.constructor=_3asyD.Stage,_3asyD.Stage.prototype.add=function(t){"undefined"==typeof this.MESHES?this.MESHES=[t]:this.MESHES.push(t)},_3asyD.Stage.prototype.setPerspectiveCamera=function(t,r,i,e){var o=Math.tan(_3asyD.dtor(.5*t)),a=-(i+e)/(i-e),n=-2*i*e/(i-e);this.CAMERA=[.5/o,0,0,0,0,.5*r/o,0,0,0,0,a,n,0,0,-1,0]},_3asyD.Mesh=function(t,r,i){this.OBJECTS="undefined"!=typeof i?i:[],"undefined"!=typeof r&&(this.SHADER=new _3asyD.Shader(r),this.loadShaderVariables(),this.SHADER_TYPE=this.SHADER.type),this.NAME=t},_3asyD.Mesh.prototype=_3asyD,_3asyD.Mesh.prototype.constructor=_3asyD.Mesh,_3asyD.Mesh.prototype.addShape=function(t){"undefined"==typeof this.OBJECTS?this.OBJECTS=[t]:this.OBJECTS.push(t)},_3asyD.Mesh.prototype.setShader=function(t){try{this.SHADER=t,this.loadShaderVariables(),this.SHADER_TYPE=this.SHADER.type}catch(r){console.error(r)}},_3asyD.Mesh.prototype.setLight=function(t,r,i,e){try{var o=this.gl,a=this.SHADER.SHADER_PROGRAM;o.useProgram(a);for(var n=0;n<t.length;++n)1==r.length?o.uniform3fv(o.getUniformLocation(a,t[n]),new Float32Array(this.hexToGLRGB(r[0]))):o.uniform3fv(o.getUniformLocation(a,t[n]),new Float32Array(this.hexToGLRGB(r[n])));void 0!==typeof i&&o.uniform1f(o.getUniformLocation(a,"GLOSS"),i),void 0!==typeof e&&o.uniform3fv(o.getUniformLocation(a,"SOURCE_DIRECTION"),new Float32Array(this.vectorByScalar(e,-1))),o.useProgram(null)}catch(s){console.error(s)}},_3asyD.Mesh.prototype.loadShaderVariables=function(){var t=this.gl,r=this.SHADER.SHADER_PROGRAM,i=this.SHADER.UNIFORMS,e=this.SHADER.ATTRIBUTES;this.UNIFORMS={},this.ATTRIBUTES={};for(var o=0;o<i.length;++o)this.UNIFORMS[i[o]]=t.getUniformLocation(r,i[o]);for(var o=0;o<e.length;++o)this.ATTRIBUTES[e[o]]=t.getAttribLocation(r,e[o]),t.enableVertexAttribArray(this.ATTRIBUTES[e[o]]);console.log(this)},_3asyD.Cube=function(t,r,i){_3asyD.Shape.call(this);var e=t/2,o=r/2,a=i/2;this.CHILDREN=[],this.INDICIES=36,this.LENGTH=t,this.WIDTH=r,this.HEIGHT=i,this.DRAWTYPE=_3asyD.gl.TRIANGLES,this.VERTICIES=[-1*e,-1*o,-1*a,1*e,-1*o,-1*a,1*e,1*o,-1*a,-1*e,1*o,-1*a,-1*e,-1*o,1*a,1*e,-1*o,1*a,1*e,1*o,1*a,-1*e,1*o,1*a,-1*e,-1*o,-1*a,-1*e,1*o,-1*a,-1*e,1*o,1*a,-1*e,-1*o,1*a,1*e,-1*o,-1*a,1*e,1*o,-1*a,1*e,1*o,1*a,1*e,-1*o,1*a,-1*e,-1*o,-1*a,-1*e,-1*o,1*a,1*e,-1*o,1*a,1*e,-1*o,-1*a,-1*e,1*o,-1*a,-1*e,1*o,1*a,1*e,1*o,1*a,1*e,1*o,-1*a],this.FACES=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this.NORMALS=[0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0],this.COLOR=[1,1,0,1,1,0,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0],this.bufferSetUp()},_3asyD.Cube.prototype=Object.create(_3asyD.Shape.prototype),_3asyD.Cube.prototype.constructor=_3asyD.Cube;