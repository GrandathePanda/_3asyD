var PI=Math.PI,_3asyD={gl:null,programs:[],currentProgram:null,VMATRIX:_3asyD.getI4(),UNIFORMS:[],PMATRIX:_3asyD.getPerspectiveProj(40,$("#canvas").width()/$("#canvas").height(),1,100),ATTRIBUTES:[],dtor:function(t){return t*Math.PI/180},getPerspectiveProj:function(t,r,i,e){var a=Math.tan(_3asyD.dtor(.5*t)),n=-(i+e)/(i-e),o=-2*i*e/(i-e);return[.5/a,0,0,0,0,.5*r/a,0,0,0,0,n,o,0,0,-1,0]},getI4:function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},rotateX:function(t,r){var i=Math.cos(r),e=Math.sin(r),a=t[1],n=t[5],o=t[9];t[1]=t[1]*i-t[2]*e,t[5]=t[5]*i-t[6]*e,t[9]=t[9]*i-t[10]*e,t[2]=t[2]*i+a*e,t[6]=t[6]*i+n*e,t[10]=t[10]*i+o*e},rotateY:function(t,r){var i=Math.cos(r),e=Math.sin(r),a=t[0],n=t[4],o=t[8];t[0]=i*t[0]+e*t[2],t[4]=i*t[4]+e*t[6],t[8]=i*t[8]+e*t[10],t[2]=i*t[2]-e*a,t[6]=i*t[6]-e*n,t[10]=i*t[10]-e*o},rotateZ:function(t,r){var i=Math.cos(r),e=Math.sin(r),a=t[0],n=t[4],o=t[8];t[0]=i*t[0]-e*t[1],t[4]=i*t[4]-e*t[5],t[8]=i*t[8]-e*t[9],t[1]=i*t[1]+e*a,t[5]=i*t[5]+e*n,t[9]=i*t[9]+e*o},crossProduct:function(t,r){try{if(t.length>3||r.length>3)throw"Vector length greater than 3. Fuck that noise.";if(t.length!=r.length)throw"Vector lengths not equal. Seriously?";if(1==t.length)throw"This isn't a cross product, this is called basic multiplication use the * operator for that.";if(2==t.length)return t[0]*r[1]-r[0]*t[1];if(3==t.length)return[t[1]*r[2]-t[2]*r[1],t[2]*r[0]-t[0]*r[2],t[0]*r[1]-t[1]*r[0]]}catch(i){return console.error(i),!1}},translateZ:function(t,r){t[14]+=r},setGL:function(t){try{this.gl=$(t)[0].getContext("experimental-webgl")}catch(r){return console.error(r),!1}return!0},getGL:function(){var t=this.gl;return null!=t?t:!1},createFromExternalScripts:function(t,r,i,e){var a=this.gl,n=null;$.when($.get(t),$.get(r)).done(function(t,r){var o=a.createShader(a.VERTEX_SHADER),s=a.createShader(a.FRAGMENT_SHADER);return a.shaderSource(o,t[0]),a.compileShader(o),a.getShaderParameter(o,a.COMPILE_STATUS)?(a.shaderSource(s,r[0]),a.compileShader(s),a.getShaderParameter(s,a.COMPILE_STATUS)?(n=a.createProgram(),a.attachShader(n,o),a.attachShader(n,s),a.linkProgram(n),_3asyD.programs[i]=n,void e()):(console.error("Fragment Shader Failed to Compile.\n"+a.getShaderInfoLog(s)+"\n"),!1)):(console.error("Vertex Shader Failed to Compile.\n"+a.getShaderInfoLog(o)+"\n"),!1)})},setProgram:function(t){try{this.GL.useProgram(this.programs[t]),this.currentProgram=this.programs[t]}catch(r){console.error(r)}},loadUniforms:function(t){var r=this.gl,e=this.currentProgram;for(i=0;i<t.length;++i)uniforms[t[i]]=r.getUniformLocation(e,t[i]);for(i=0;i<shapeList.length;++i)this.UNIFORMS=uniforms},setLighting:function(t){var r=this.gl,e=this.currentProgram,a=t.keys();for(i=0;i<a.length;++i)r.uniform3fv(r.getUniformLocation(e,a[i]),t[i])},bufferSetUp:function(t){var r=this.gl;t.VERTEX_BUFFER=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.VERTEX_BUFFER),r.bufferData(r.ARRAY_BUFFER,new Float32Array(t.VERTICIES),r.STATIC_DRAW),t.FACE_BUFFER=r.createBuffer(),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.FACE_BUFFER),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.FACES),r.STATIC_DRAW),t.NORMAL_BUFFER=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.NORMAL_BUFFER),r.bufferData(r.ARRAY_BUFFER,new Float32Array(t.NORMALS),r.STATIC_DRAW),t.COLOR_BUFFER=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.COLOR_BUFFER),r.bufferData(r.ARRAY_BUFFER,new Float32Array(t.COLOR),r.STATIC_DRAW)},setDrawType:function(t,r){try{{this.gl}t.DRAWTYPE=gl[r]}catch(i){return console.error(i),!1}},loadAttributes:function(t){var r=this.gl,e=this.currentProgram;for(i=0;i<t.length;++i)this.ATTRIBUTES[t[i]]=r.getAttribLocation(e,t[i]),r.enableVertexAttribArray(this.ATTRIBUTES[t[i]])},drawElements:function(t){var r=this.gl,e=this.ATTRIBUTES;try{for(r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.uniformMatrix4fv(this.UNIFORMS.pMatrix,!1,this.PMATRIX),r.uniformMatrix4fv(this.UNIFORMS.vMatrix,!1,this.VMATRIX),i=0;i<t.length;++i){for(r.uniformMatrix4fv(this.UNIFORMS.mMatrix,!1,t[i].MMATRIX),r.bindBuffer(r.ARRAY_BUFFER,t[i].VERTEX_BUFFER),r.bindBuffer(r.ARRAY_BUFFER,t[i].COLOR_BUFFER),r.bindBuffer(r.ARRAY_BUFFER,t[i].NORMAL_BUFFER),j=0;j<e.length;++j)r.vertexAttribPointer(e[j],3,r.FLOAT,!1,12,0);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t[i].FACE_BUFFER),r.drawElements(t[i].DRAWTYPE,t[i].INDICIES,r.UNSIGNED_SHORT,0)}r.flush()}catch(a){return console.error(a),!1}},Cube:function(t,r,e){var a=t/2,n=r/2,o=e/2;this.INDICIES=36,this.LENGTH=t,this.WIDTH=r,this.HEIGHT=e,this.MMATRIX=this.getI4(),this.DRAWTYPE=_3asyD.gl.TRIANGLES,this.VERTICIES=[-1*a,-1*n,-1*o,1,1,0,1*a,-1*n,-1*o,1,1,0,1*a,1*n,-1*o,1,1,0,-1*a,1*n,-1*o,1,1,0,-1*a,-1*n,1*o,0,0,1,1*a,-1*n,1*o,0,0,1,1*a,1*n,1*o,0,0,1,-1*a,1*n,1*o,0,0,1,-1*a,-1*n,-1*o,0,1,1,-1*a,1*n,-1*o,0,1,1,-1*a,1*n,1*o,0,1,1,-1*a,-1*n,1*o,0,1,1,1*a,-1*n,-1*o,1,0,0,1*a,1*n,-1*o,1,0,0,1*a,1*n,1*o,1,0,0,1*a,-1*n,1*o,1,0,0,-1*a,-1*n,-1*o,1,0,1,-1*a,-1*n,1*o,1,0,1,1*a,-1*n,1*o,1,0,1,1*a,-1*n,-1*o,1,0,1,-1*a,1*n,-1*o,0,1,0,-1*a,1*n,1*o,0,1,0,1*a,1*n,1*o,0,1,0,1*a,1*n,-1*o,0,1,0],this.FACES=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this.NORMALS=[];var s=this.crossProduct;for(i=1;24>=i;++i)2>=i&&this.NORMALS.concat(s([-1*a,-1*n,-1*o],[1*a,-1*n,-1*o])),i>2&&4>=i&&this.NORMALS.concat(s([1*a,1*n,-1*o],[-1*a,1*n,-1*o])),i>4&&6>=i&&this.NORMALS.concat(s([-1*a,-1*n,1*o],[1*a,-1*n,1*o])),i>6&&8>=i&&this.NORMALS.concat(s([1*a,1*n,1*o],[-1*a,1*n,1*o])),i>8&&10>=i&&this.NORMALS.concat(s([-1*a,-1*n,-1*o],[-1*a,1*n,-1*o])),i>10&&12>=i&&this.NORMALS.concat(s([-1*a,1*n,1*o],[-1*a,-1*n,1*o])),i>12&&14>=i&&this.NORMALS.concat(s([1*a,-1*n,-1*o],[1*a,1*n,-1*o])),i>14&&16>=i&&this.NORMALS.concat(s([1*a,1*n,1*o],[1*a,-1*n,1*o])),i>16&&18>=i&&this.NORMALS.concat(s([-1*a,-1*n,-1*o],[-1*a,-1*n,1*o])),i>18&&20>=i&&this.NORMALS.concat(s([1*a,-1*n,1*o],[1*a,-1*n,-1*o])),i>20&&22>=i&&this.NORMALS.concat(s([-1*a,1*n,-1*o],[-1*a,1*n,1*o])),i>22&&24>=i&&this.NORMALS.concat(s([1*a,1*n,1*o],[1*a,1*n,-1*o]));this.COLOR=[1,1,0,1,1,0,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0]},Sphere:function(t,r,e,a,n){var o=t,s=r,h=e,R=a,c=n;for(this.VERTICIES=[],this.NORMALS=[],this.COLOR=[],this.MMATRIX=_3asyD.getI4(),this.INDICIES=a*n*6,this.DRAWTYPE=_3asyD.gl.TRIANGLES,i=0;PI>=i;i+=PI/c)for(j=0;2*PI>=j;j+=2*PI/R){var A=Math.sin(i)*Math.cos(j),f=Math.sin(i)*Math.sin(j),u=Math.cos(i);PI>=j?this.COLOR.push(.5,.2,.9):this.COLOR.push(.2,.4,.7),this.NORMALS.push(A,f,u),this.VERTICIES.push(o*A,s*f,h*u)}for(this.FACES=[],i=0;n>i;++i)for(j=0;a>j;++j){var E=i*(a+1)+j,F=E+a+1;this.FACES.push(E,F,E+1),this.FACES.push(F,F+1,E+1)}},Cone:function(){}};